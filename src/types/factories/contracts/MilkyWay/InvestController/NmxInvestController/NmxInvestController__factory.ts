/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  NmxInvestController,
  NmxInvestControllerInterface,
} from "../../../../../contracts/MilkyWay/InvestController/NmxInvestController/NmxInvestController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_milkyWayAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bnbAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_investingTokenAddress",
        type: "address",
      },
      {
        internalType: "enum IBaseInvestController.InvestingTokenType",
        name: "_investingTokenType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_rewardsTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_factoryAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingServiceAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "bnbAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimAndBuyBack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factoryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_targetToken",
        type: "address",
      },
    ],
    name: "getTokenPriceInBnb",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_investingBnbAmount",
        type: "uint256",
      },
    ],
    name: "invest",
    outputs: [
      {
        internalType: "uint256",
        name: "investingAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "investedBnb",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "investedTokensByBnbPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "priceInBnb",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "investingTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "investingTokenType",
    outputs: [
      {
        internalType: "enum IBaseInvestController.InvestingTokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingServiceAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawalAndRefoundToMilkyWal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawnBnb",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

type NmxInvestControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NmxInvestControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NmxInvestController__factory extends ContractFactory {
  constructor(...args: NmxInvestControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _milkyWayAddress: PromiseOrValue<string>,
    _bnbAddress: PromiseOrValue<string>,
    _investingTokenAddress: PromiseOrValue<string>,
    _investingTokenType: PromiseOrValue<BigNumberish>,
    _rewardsTokenAddress: PromiseOrValue<string>,
    _factoryAddress: PromiseOrValue<string>,
    _stakingServiceAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NmxInvestController> {
    return super.deploy(
      _milkyWayAddress,
      _bnbAddress,
      _investingTokenAddress,
      _investingTokenType,
      _rewardsTokenAddress,
      _factoryAddress,
      _stakingServiceAddress,
      overrides || {}
    ) as Promise<NmxInvestController>;
  }
  override getDeployTransaction(
    _milkyWayAddress: PromiseOrValue<string>,
    _bnbAddress: PromiseOrValue<string>,
    _investingTokenAddress: PromiseOrValue<string>,
    _investingTokenType: PromiseOrValue<BigNumberish>,
    _rewardsTokenAddress: PromiseOrValue<string>,
    _factoryAddress: PromiseOrValue<string>,
    _stakingServiceAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _milkyWayAddress,
      _bnbAddress,
      _investingTokenAddress,
      _investingTokenType,
      _rewardsTokenAddress,
      _factoryAddress,
      _stakingServiceAddress,
      overrides || {}
    );
  }
  override attach(address: string): NmxInvestController {
    return super.attach(address) as NmxInvestController;
  }
  override connect(signer: Signer): NmxInvestController__factory {
    return super.connect(signer) as NmxInvestController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NmxInvestControllerInterface {
    return new utils.Interface(_abi) as NmxInvestControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NmxInvestController {
    return new Contract(address, _abi, signerOrProvider) as NmxInvestController;
  }
}
